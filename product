#!/usr/bin/lotus

function logger-warn
set_color magenta
echo "$prefix ! $argv[1..-1]"
set_color normal
end
function logger-error
set_color red
echo "$prefix x $argv[1..-1]"
set_color normal
end
function logger-info-start
set_color normal
echo "$prefix + $argv[1..-1]"
set_color normal
end
function logger-info-end
set_color normal
echo "$prefix - $argv[1..-1]"
set_color normal
end
function logger-debug
set_color yellow
echo "$prefix ? $argv[1..-1]"
set_color normal
end
function logger-success
set_color green
echo "$prefix âˆš $argv[1..-1]"
set_color normal
end
function logger -d "a lib to print msg quickly"
switch $argv[1]
    case 0
        logger-info-start $argv[2..-1]
    case 1
        logger-info-end $argv[2..-1]
    case 2
        logger-success $argv[2..-1]
    case 3
        logger-debug $argv[2..-1]
    case 4
        logger-warn $argv[2..-1]
    case 5
        logger-error $argv[2..-1]
end
end

function help_echo
echo '(./)app'
end


function congestion_control_switch

end
function keepalive_switch

end
function sysinfo
    #Decide initd type
    set -xg sys_initd (ps -p 1 -o comm=)
    #Decide virtual type
    #Try to detect if it's a container
    if ps -ef | string match -eq '\['
        set -xg sys_virt container
    else
        #Try to set virt platform
        set -xg sys_virt (lscpu | string match -e 'Hypervisor vendor' | string split -f2 : | string trim)
        #Fallback to baremetal
        if test -z "$sys_virt"
            set -xg sys_virt baremetal
        end
    end
    #Detect if zram is available
    if string match -eq zram (lsmod)
        set -xg sys_zram_module true
        #Detect if zram is enabled
        if string match -eq zram (cat /proc/swaps )
            set -xg sys_zram_enable true
        end
        #Detect available algo
        set -xg sys_zram_algo_ava (cat /sys/block/zram0/comp_algorithm)
    end
    #Cpu related
    set -xg sys_cpu_governors_ava (cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors)
    set -xg sys_cpu_threads (nproc)
    #Network related
    set -xg sys_tcp_congestion_control_ava (cat /proc/sys/net/ipv4/tcp_available_congestion_control)
    #Print or not
    if test "$argv[1]" = "print"
        env | string match -e 'sys_'
    end
end

function loadconf

end
function loadinfo
    # dynamic loadavg info
    # 0 = spare
    # 1 = intensive
    # 3 = medium
    # 4 = busy

    #calc loadavg
    set -xg load_avg (math "$(cat /proc/loadavg | string split -f1 ' ')/$sys_cpu_threads*100")
    #status
    if test $load_avg -ge 75
        set -xg load_stat 4
    else
        if test $load_avg -ge 50
            set -xg load_stat 3
        else
            if test $load_avg -ge 25
                set -xg load_stat 2
            else
                set -xg load_stat 1
            end
        end
    end
    #Print or not
    if test "$argv[1]" = print
        env | string match -e load_
    end
end

function fake_swap_switch

end
function swapfile_switch

end
function zram_switch

end
function dynamic_control_cache

end
function dynamic_control_swap

end
function dynamic_control_switch

end
function broker
    logger 0 'Daemon loading'
    echo $fish_pid >/tmp/SakuraD.lock
    loadconf
    if $sys_zram_module
        if $sys_zram_enable
        else
            zram_switch
        end
    else
        logger 4 'Zram module is not available in this system'
    end

end
set -x prefix [Sakura]
sysinfo
switch $argv[1]
    case ign
        broker $argv[2..-1]
    case sysinfo
        sysinfo print $argv[2..-1]
    case loadinfo
        loadinfo print $argv[2..-1]
    case h help '*'
        help_echo
end
